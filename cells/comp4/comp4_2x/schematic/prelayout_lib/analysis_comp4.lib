/* Liberty file for analysis_comp4 
 * Generated on 2025-08-21 09:40:13
 * Technology: GF180MCU
 */

library(analysis_comp4) {
  
  comment                        : "2-bit Comparator Library";
  delay_model                    : table_lookup;
  simulation                     : false;
  capacitive_load_unit (1,pF);
  leakage_power_unit             : 1nW;
  current_unit                   : "1uA";
  pulling_resistance_unit        : "1kOhm";
  time_unit                      : "1ns";
  voltage_unit                   : "1V";
  
  input_threshold_pct_rise       : 50;
  input_threshold_pct_fall       : 50;
  output_threshold_pct_rise      : 50;
  output_threshold_pct_fall      : 50;
  
  slew_lower_threshold_pct_rise  : 20;
  slew_lower_threshold_pct_fall  : 20;
  slew_upper_threshold_pct_rise  : 80;
  slew_upper_threshold_pct_fall  : 80;
  slew_derate_from_library       : 1.0;
  
  nom_process                    : 1;
  nom_temperature                : 25;
  nom_voltage                    : 3.3;
  
  operating_conditions(typical) {
    process     : 1;
    temperature : 25;
    voltage     : 3.3;
  }
  
  default_operating_conditions : typical;
  
  /* Lookup table templates */
  lu_table_template(delay_template_5x5) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("0.1, 0.5, 1.0, 2.0");
    index_2 ("0.01, 0.05, 0.1, 0.2");
  }
  
  /* Power lookup table template */
  power_lut_template(power_template_5x5) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("0.1, 0.5, 1.0, 2.0");
    index_2 ("0.01, 0.05, 0.1, 0.2");
  }
  
  /* Cell definition */
  cell(2bit_comp_2x) {
    area : 100.0;
    
    /* Input pins */
    pin(A0) {
      direction : input;
      capacitance : 0.01;
    }
    
    pin(A1) {
      direction : input;
      capacitance : 0.01;
    }
    
    pin(B0) {
      direction : input;
      capacitance : 0.01;
    }
    
    pin(B1) {
      direction : input;
      capacitance : 0.01;
    }
    
    pin(L) {
      direction : output;
      
      /* Boolean function */
      function : "(!A1 & B1) | ((!(B1 ^ A1)) & !A0 & B0)";
      
      /* Timing arcs */
      timing() {
        related_pin : "A0";
        timing_sense : non_unate;
        
        cell_rise(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        cell_fall(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        rise_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
        
        fall_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
      }
      timing() {
        related_pin : "A1";
        timing_sense : non_unate;
        
        cell_rise(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        cell_fall(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        rise_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
        
        fall_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
      }
      timing() {
        related_pin : "B0";
        timing_sense : non_unate;
        
        cell_rise(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        cell_fall(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        rise_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
        
        fall_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
      }
      timing() {
        related_pin : "B1";
        timing_sense : non_unate;
        
        cell_rise(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        cell_fall(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        rise_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
        
        fall_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
      }
    }
    
    pin(G) {
      direction : output;
      
      /* Boolean function */
      function : "(A1 & !B1) | ((!(B1 ^ A1)) & A0 & !B0)";
      
      /* Timing arcs */
      timing() {
        related_pin : "A0";
        timing_sense : non_unate;
        
        cell_rise(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        cell_fall(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        rise_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
        
        fall_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
      }
      timing() {
        related_pin : "A1";
        timing_sense : non_unate;
        
        cell_rise(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        cell_fall(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        rise_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
        
        fall_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
      }
      timing() {
        related_pin : "B0";
        timing_sense : non_unate;
        
        cell_rise(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        cell_fall(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        rise_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
        
        fall_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
      }
      timing() {
        related_pin : "B1";
        timing_sense : non_unate;
        
        cell_rise(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        cell_fall(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        rise_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
        
        fall_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
      }
    }
    
    pin(E) {
      direction : output;
      
      /* Boolean function */
      function : "(!(B1 ^ A1)) & (!(B0 ^ A0))";
      
      /* Timing arcs */
      timing() {
        related_pin : "A0";
        timing_sense : non_unate;
        
        cell_rise(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        cell_fall(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        rise_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
        
        fall_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
      }
      timing() {
        related_pin : "A1";
        timing_sense : non_unate;
        
        cell_rise(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        cell_fall(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        rise_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
        
        fall_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
      }
      timing() {
        related_pin : "B0";
        timing_sense : non_unate;
        
        cell_rise(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        cell_fall(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        rise_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
        
        fall_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
      }
      timing() {
        related_pin : "B1";
        timing_sense : non_unate;
        
        cell_rise(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        cell_fall(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000", \
            "0.500000, 0.500000, 0.500000, 0.500000" \
          );
        }
        }
        
        rise_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
        
        fall_transition(delay_template_5x5) {
        lu_table_template(delay_template_5x5) {
          index_1 ("0.1, 0.5, 1.0, 2.0");
          index_2 ("0.01, 0.05, 0.1, 0.2");
          values ( \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000", \
            "0.100000, 0.100000, 0.100000, 0.100000" \
          );
        }
        }
      }
    }
    
  }
}